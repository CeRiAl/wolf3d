------------------------------------------------------------------------------
Control Menu:
* TODO

Sound Menu:
* Sound Effects:
- PCM
- OPL2
- PC Speaker?
- None
* Music:
- OPL2
- None
* Sampling Rate:
- 44100
- 22050
------------------------------------------------------------------------------
[Indexed?]:
Yes:
- palette (8bit)
No:
- truecolor (15, 16, 24, 32)

[Shm?]:
Yes:
- XShmImage
No:
- XImage

[Windowed]:
- [Indexed?]
- [Shm?]

[DGA1?]:
Yes:
- YES
No:
- NO

[DGA2?]:
Yes:
- YES
No:
- [DGA1?]

[DGA?]:
- [DGA2?]
Yes:
- [Indexed?]
No:
- [Windowed]	

[Fullscreen?]:
Yes:
- [DGA?]
No:
- [Windowed]

[Init]:
- [Fullscreen?]

------------------------------------------------------------------------------
*
SD_StartMusic((MusicGroup *)audiosegs[STARTMUSIC + chunk]);
=>
SD_StartMusic(chunk);
------------------------------------------------------------------------------
* remove farmapylookup?
* would be nice if Quit() used vsnprintf, etc
* actor walking through door is drawn in front of door: near end of E1M1 for
example
* clean up vi_xlib.c: fix vid mode changing, fix dga for non8bit modes and
the nonpalette setting stuff... lots of if statements
also, it should be able to compile without extensions
* getenv so that you can point an env. var to the proper dir
* refresh rate under svgalib is horrible. the screen keeps getting updated
midframe.  it's due to the way CalcTics works
* rewrite hw (sound, input) code, remove stuff like SD_SetSoundMode
* proper left/right sound
* adlib sounds seem like they play at twice the freq
* fix config file and savegames
* use static and const where appropriate
* convert uses of open() to fopen(), etc maybe
* menu code is a mess, always does things differently than the rest of the
code, it really needs to be cleaned up
* id_ca.c cache code: fix/readd/rewrite the "garbage collection" system?
* rewrite id_ca.c: uniform memory handling system
* clean up header files, especially wl_def.h, where some declarations aren't 
in the right place
* every structure that is read/written must be PACKED, with datatypes
specifially set to correct size
* or have PACKED versions of read/write structures, and transfer
to/from just for reading, so only non-packed structures are used during
actual gameplay/etc. 
* is that memory intro screen needed anymore? probably not, although it
would be nice to show what version is loaded, but doom just printed text
and the intro screen which came with wolf3d has copyrighted/trademarked images
maybe make a new intro screen...
* fix the input code, everything is spread out... ideally everything should
work the same, let the input handler do it all instead
i think its safe for now to go with the scancodes as being the "universal"
key type, and for everything not scancode-based, have a function to
translate
* wl_menu uses specific scancodes for names, config file will have to use
metaname like sc_Left etc or something
* add a ViewMap? (could be done similar to mac version)
* find and remove any function stubs (functions which just call another
function with same parameters, only difference is the name)
* fix wl_debug.c, lots of junk code..
* change the current parameter handling code to something like getopt
* remove check for debugmode?
* look for places where gfx needs to be redrawn, like back to game etc 
* fizzlefade is hackish, stipple buf would work ok in opengl, maybe only
update once per frame or such...
no idea how to do fizzlefade in TrueColor X
* check filehandling (ex, file missing, bad file type, and such)
PlayDemoFromFile specifically
* make sure all infinite loops are found (looping around Keyboard)
* deathcam went by too fast, and right before the fizzlefade was being done
on the border
same with the spear of destiny animation part of ending
* reduce code duplication in the vi_* files.
* split wl_draw into two files (draw independent, draw dependent)
* make sure none of the non-loader code tries to handle gfx/sound data 
directly
* when window loses focus, it should clear the keys
* rename visable to visible
* create 'sound channels' with priority.. ie a door can only make one sound
at a time
* systems with no sound should still have working WaitSoundDone.. it's 
possible to calculate the sound lengths in terms of 70Hz (adlib sound len / 2, 
pcm sound len / 100).

Things to try:
* Create a native palette format instead of doing conversions each frame
------------------------------------------------------------------------------
