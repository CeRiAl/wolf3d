------------------------------------------------------------------------------
Control Menu:
* TODO

Sound Menu:
* Sound Effects:
- PCM
- OPL2
- PC Speaker?
- None
* Music:
- OPL2
- None
* Sampling Rate:
- 44100
- 22050
------------------------------------------------------------------------------
* use int16_t, etc (stdint)
* finish serializing reads/writes, endian issues
* fix fix fix different size stuff
works alright at some res, but breaks on others currently
add support for resolution changing at any time?
probably will only support 320x200, 640x400, 960x600
* add ylookup?
* remove farmapylookup?
* would be nice if Quit() used vsnprintf, etc
* actor walking through door is drawn in front of door: near end of E1M1 for
example (is this reproducible?)
* getenv so that you can point an env. var to the proper dir
* rewrite hw (sound, input) code, remove stuff like SD_SetSoundMode
* fix the input code, everything is spread out... ideally everything should
work the same, let the input handler do it all instead
i think its safe for now to go with the scancodes as being the "universal"
key type, and for everything not scancode-based, have a function to
translate
* use static and const where appropriate
* menu code is a mess, always does things differently than the rest of the
code, it really needs to be cleaned up
* id_ca.c cache code: fix/readd/rewrite the "garbage collection" system?
* rewrite id_ca.c: uniform memory handling system
* clean up header files, especially wl_def.h, where some declarations aren't 
in the right place
* change the current parameter handling code to something like getopt
* remove check for debugmode?
* fizzlefade is hackish, stipple buf would work ok in opengl, maybe only
update once per frame or such...
no idea how to do fizzlefade in TrueColor X
fix fizzlefade for non 320x200 resolutions
* check filehandling (ex, file missing, bad file type, and such)
PlayDemoFromFile specifically
* deathcam went by too fast, and right before the fizzlefade was being done
on the border
same with the spear of destiny animation part of ending
* reduce code duplication in the vi_* files.
* split wl_draw into two files (draw independent, draw dependent)
* when window loses focus, it should clear the keys
* rename visable to visible
* create 'sound channels' with priority.. ie a door can only make one sound
at a time
* systems with no sound should still have working WaitSoundDone.. it's 
possible to calculate the sound lengths in terms of 70Hz (adlib sound len / 2, 
pcm sound len / 100).
------------------------------------------------------------------------------
Save game header:
8 bytes: WOLF3D, 0, 0
4 bytes: SAV, 0
4 bytes: version (integer)
4 bytes: game type (WL1, WL6, SDM, SOD)
4 bytes: seconds past 1970 (time(NULL))
4 bytes: padding
4 bytes: checksum for the data (after text string)
32 bytes: text string

Version 0xFFFFFFFF Data: (Unofficial Save Game data)
<see wl_main.c>

Version 0x00000000 Data: (Official)
<undetermined>

Version 0x00000001 Data: (Official)
<undetermined but will be compressed>

---

Config header:
8 bytes: WOLF3D, 0, 0
4 bytes: CFG, 0
4 bytes: version (integer)
4 bytes: game type (WL1, WL6, SDM, SOD)
4 bytes: seconds past 1970 (time(NULL))
4 bytes: padding
4 bytes: checksum for the data

Version 0xFFFFFFFF Data: (Unofficial Config data)
<see wl_main.c>

Version 0x00000000 Data: (Official)
<undetermined>

Version 0x00000001 Data: (Official)
<undetermined but will be compressed>

------------------------------------------------------------------------------
