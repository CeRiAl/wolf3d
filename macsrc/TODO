TODO:
* Correct copyrights
  - vi_ are mostly mine, with portions based on the original code
  - move stuff out of stub.c to more proper places
* Pause key
* SVGAlib Hack:
  - Require 320x200x256
  - If user requests a gamemode which SVGAlib says it does not support, fail
  - If SVGAlib does not support 512x384x256, allow the user to pan around 
    with the keypad arrow keys if only mode supported 320x200x256 (center if
    640x400 or 480 is supported?)
* Finish moving all 2D code to SoftDraw.c
* Finish OpenGL
  - Check if topsprite drawing is correct
  + Status bars, Introscreens [DrawShape]
    - Not sure exactly yet how I will implement this yet.
  - Correct viewing frustum
  + Allow window resizing
    - Only bother with 640x480 versions of GameShapes.  Minimum for GLQuake
      was 640x480, and you could get lower resolutions with software.
  - Could use the LastTexture to have less glBegin/Ends (would need to know
    where to stop though (try IO_DisplayViewBuffer).
* Save/Load Games
* Documentation
* Sound!
  - Need to write sound playing code (probably access /dev/dsp directly
    since this source does not have any code for determining sound position).
  - Music is planned.
* Interface
  + Menus and dialog boxes
    - Command line (temporary workaround for no menus).
    - Text only menus (similar to what snes9x has).
* Different depths/visuals for software clients.

BUGS:
* Software Drawing seems like its imprecise, stationary sprites move back and 
  forth, and walls 'swim' when you move around, or sprites pop into different 
  sizes when are far enough and get closer/farther away
  - Possibly caused by 8.8 imprecision?

IDEAS:
* Menu Keys
  - ESC: Quit
  - F1:  Help
  - XXX: Load Game
  - XXX: Load Previously Loaded Game
  - XXX: Save Game
  - XXX: Save Game to Previously used File
  - XXX: Options
* How about adding red/white shifts (from PC wolf3d)? So screen changes
  color when you are hit or pick up items.
* when saving/loading games, run them through htons/etc.

MISC:
