TODO:
* See TODO in src/TODO
* FX_GLIDE_SWAPINTERVAL=0 is needed for me to prevent jerkyness

* Pause key
  - With windowed systems, put paused in the title bar?
  + Being in a text menu could be the "pause"
    - This would be fine for svgalib
    - What if the program is ran without a term? The user's fault?
* SVGAlib Hack:
  - Check to make sure linear addressing is supported
  - If SVGAlib does not support 512x384x256, allow the user to pan around 
    with the keypad arrow keys if only mode supported 320x200x256 (center if
    640x400 or 480 is supported?)
  - Have a "force no 512 mode" for those who do not want mode changing.
* Finish moving all 2D code to SoftDraw.c
  - Should move some code so it is not such a large file (SoftDraw2.c)
* Finish OpenGL
  + Status bars, Level completed screen, Psyched
    - IO_Draw* (status bar versions) are stubbed, update statusbar when
      doing screen update
  - Finish window resizing
  - When all drawing is implemented, remove any unnecessary state/matrix
    changes.
  - Split up GLDraw.c
  - Is GL_REPLACE faster than GL_MODULATE for textures?
  - Save "draw state" so redrawing works right when screen is
    resized/exposed
  - GLX 1.3?
* Documentation
* Sound!
  - Need to write sound playing code (probably access /dev/dsp directly
    since this source does not have any code for determining sound position).
  - Check 'csnd' for a sample, then 'snd ' if not found.
  + Music is planned.
    - Output using timidity with sounds did not end up sounding good.
      Probably the INST resources are used for ADSR/looping/etc...
  - csnd: sox -t raw -r 11025 -c 1 -w -s a.dat -r 11025 -c 1 -w -s -t wav a.wav
  - snd: sox -t raw -r 11025 -c 1 -w -u a.dat -r 11025 -c 1 -w -s -t wav a.wav
  - csnd might be -b -s (odd)
  - 11025 will probably be the best rate
* Interface
  + Menus and dialog boxes
    - Command line (temporary workaround for no menus).
    - Text only menus (similar to what snes9x has).
    - Would like to have a "lower level" X Toolkit, to provide menus and
      dialog boxes, and various widgets, but I rather not be "forced" into
      losing the ability to call Xlib functions directly.
    - Make them like PC Wolf3D.
* Different depths/visuals for software clients.
  + Different functions to draw with different bpps.
    - 15 bpp uses same draw routes as 16 but different set palette
    + not sure how to do palette fades
      - don't support them generally
      - MacPlay->Id Logo: have some sort of redraw.
      - Fades in game can just call renderview each time
* SDL version (software)
* Mouse
* Psyched bar
* Finish GTK+ code
* vi_glx.c will probably be the most updated of the frontends. Be sure to
  update the others later.
* Finish moving things out of stub.c

BUGS:
* Software Drawing seems like its imprecise, stationary sprites move back and 
  forth, and walls 'swim' when you move around, or sprites pop into different 
  sizes when are far enough and get closer/farther away
  - Possibly caused by 8.8 imprecision?
* If you die/win, and have a key held down, screen passes by too fast

IDEAS:
* Menu Keys
  - ESC: Quit (?)
  - F1:  Help
  - F2:  Save Game
  - F3:  Load Game
  - F4:  Options
  - XXX: Load Previously Loaded Game
  - XXX: Save Game to Previously used File
  - F10: Quit
* Command Line
  - Resolution
  - Difficulty
* How about adding red/white shifts (from PC wolf3d)? So screen changes
  color when you are hit or pick up items.

MISC:
