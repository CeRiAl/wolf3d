TODO:
* Pause key
  - With windowed systems, put paused in the title bar?
  + Being in a text menu could be the "pause"
    - This would be fine for svgalib
* SVGAlib Hack:
  - Check to make sure linear addressing is supported
  - If SVGAlib does not support 512x384x256, allow the user to pan around 
    with the keypad arrow keys if only mode supported 320x200x256 (center if
    640x400 or 480 is supported?)
  - Have a "force no 512 mode" for those who do not want mode changing.
* Finish moving all 2D code to SoftDraw.c
  - Should move some code so it is not such a large file (SoftDraw2.c)
* Finish OpenGL
  + Status bars, Introscreens, Psyched [DrawShape]
    + Not exactly sure how I will implement this yet.
      - IO_Draw* (status bar versions) are stubbed, update statusbar when
        doing screen update
  - Finish window resizing
  - Could use the LastTexture to have less glBegin/Ends.
  - When all drawing is implemented, remove any unnecessary state/matrix
    changes.
  - Split up GLDraw.c
  - GL_EXT_shared_texture_palette
* Save/Load Games
  - Menu code does not exist yet -- so just have a compiled in default save
    and load files
* Documentation
* Sound!
  - Need to write sound playing code (probably access /dev/dsp directly
    since this source does not have any code for determining sound position).
  - Check 'csnd' for a sample, then 'snd ' if not found.
  + Music is planned.
    - Output using timidity with sounds did not end up sounding good.
      Probably the INST resources are used for ASDR/looping/etc...
  - csnd: sox -t raw -r 11025 -c 1 -w -s a.dat -r 11025 -c 1 -w -s -t wav a.wav
  - snd: sox -t raw -r 11025 -c 1 -w -u a.dat -r 11025 -c 1 -w -s -t wav a.wav
  - csnd might be -b -s (odd)
  - 11025 will probably be the best rate
* Interface
  + Menus and dialog boxes
    + Command line (temporary workaround for no menus).
      - Resolution
      - Difficulty
    - Text only menus (similar to what snes9x has).
* Different depths/visuals for software clients.
  + Different functions to draw with different bpps.
    - 15 bpp uses same draw routes as 16 but different palette one
    + not sure how to do palette fades
      - don't support them generally
      - MacPlay->Id Logo: have some sort of redraw.
      - Fades in game can just call renderview each time
* Get it to compile/work with g++ if it is not too much trouble.
  - Have to rename class..
* SDL version (software)
* Mouse
* Psyched bar
* Finish GTK+ code

BUGS:
* Software Drawing seems like its imprecise, stationary sprites move back and 
  forth, and walls 'swim' when you move around, or sprites pop into different 
  sizes when are far enough and get closer/farther away
  - Possibly caused by 8.8 imprecision?
* If you die/win, and have a key held down, screen passes by too fast

IDEAS:
* Menu Keys
  - ESC: Quit
  - F1:  Help
  - XXX: Load Game
  - XXX: Load Previously Loaded Game
  - XXX: Save Game
  - XXX: Save Game to Previously used File
  - XXX: Options
* How about adding red/white shifts (from PC wolf3d)? So screen changes
  color when you are hit or pick up items.
* when saving/loading games, run them through htons/etc.

MISC:
